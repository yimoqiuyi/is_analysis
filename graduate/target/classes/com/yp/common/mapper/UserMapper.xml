<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yp.common.mapper.UserMapper">
    <resultMap id="getAlluser" type="com.yp.common.pojo.User">
        <id property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="userPwd" column="user_pwd"/>
        <result property="joinTime" column="join_time"/>
        <result property="awayTime" column="away_time"/>
        <result property="sex" column="sex"/>
        <result property="age" column="age"/>
        <result property="phone" column="phone"/>
        <result property="cardNumber" column="card_number"/>
        <result property="email" column="email"/>
        <result property="salt" column="salt"/>
        <result property="address" column="address"/>
        <result property="sanitationScore" column="sanitation_score"/>
        <result property="attendanceScore" column="attendance_score"/>
        <result property="workRatio" column="work_ratio"/>
        <result property="workSanitation" column="work_sanitation"/>
        <result property="state" column="state"/>
        <result property="workId" column="work_id"/>
        <result property="groupId" column="group_id" jdbcType="INTEGER"/>
        <result property="subParkId" column="sub_park_id"/>
        <association property="workPosition" column="work_id"
                     select="com.yp.common.mapper.WorkPositionMapper.selectOneWorkPositionById"/>
        <collection property="roleList" column="user_id" fetchType="lazy"
                    select="com.yp.common.mapper.RoleMapper.selectRoleByUserId"/>
        <collection property="sanitationList" column="user_id" fetchType="lazy"
                    select="com.yp.common.mapper.SanitationMapper.selectSanitationByUserId"/>
        <collection property="attendanceList" column="user_id" fetchType="lazy"
                    select="com.yp.common.mapper.AttendanceMapper.selectAttendanceByUserId"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_id,user_name,user_pwd,join_time,away_time,sex,age,phone,card_number,email,salt,address,sanitation_score,
        attendance_score,work_ratio,work_sanitation,state,work_id,group_id,sub_park_id
    </sql>
    <select id="selectOneUserByName" parameterType="String" resultType="user">
        select
        <include refid="Base_Column_List"/>
        from t_user where user_name = #{userName}
    </select>
    <select id="selectOneUserById" parameterType="int" resultType="user">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            <if test="userId!=null">and user_id=#{userId}</if>
        </where>
    </select>
    <select id="selectAllUsers" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user
    </select>
    <select id="seletcOneUserByworkId" parameterType="int" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where work_id=#{workId}
    </select>
    <select id="selectAllUserBygroupId" parameterType="int" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            <if test="_parameter!=null">and group_id=#{_parameter}</if>
        </where>
    </select>
    <select id="selectGroupBygroupId" parameterType="int" resultMap="getAlluser">
        select
        tu.user_id,tu.user_name,tu.user_pwd,tu.join_time,tu.away_time,tu.sex,tu.age,tu.phone,tu.card_number,tu.email,
        tu.salt,tu.address,tu.sanitation_score,tu.attendance_score,tu.work_ratio,tu.work_sanitation,tu.state,tu.work_id,tu.group_id,tu.sub_park_id
        from t_user tu,t_group tg
        <where>
            <if test="_parameter!=null">and tu.user_id=tg.user_id and tg.group_id=#{_parameter}</if>
        </where>
    </select>
    <select id="selectAllUser" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user limit #{page},#{limit}
    </select>
    <select id="selectUserByAttendanceId" parameterType="int" resultMap="getAlluser">
        select
        u.user_id,u.user_name,u.user_pwd,u.join_time,u.away_time,u.sex,u.age,u.phone,u.card_number,u.email,u.salt,
        u.address,u.sanitation_score,u.attendance_score,u.work_ratio,u.work_sanitation,u.state,u.work_id,u.group_id,u.sub_park_id
        from t_user u,t_attendance ta,t_workattendance tw
        where
        ta.attendance_id=#{attendanceId}
        and
        ta.attendance_id=tw.attendance_id
        and
        u.user_id=tw.user_id
    </select>
    <select id="selectUserByroleId" parameterType="int" resultMap="getAlluser">
        select
        u.user_id,u.user_name,u.user_pwd,u.join_time,u.away_time,u.sex,u.age,u.phone,u.card_number,u.email,u.salt,
        u.address,u.sanitation_score,u.attendance_score,u.work_ratio,u.work_sanitation,u.state,u.work_id,u.group_id,u.sub_park_id
        from t_user u,t_user_role ur,t_role r
        <where>
            <if test="roleId!=null">and u.user_id=ur.user_id and r.role_id=#{roleId} and r.role_id=ur.role_id</if>
        </where>
    </select>
    <select id="selectUserBysId" parameterType="int" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where s_id=#{sId}
    </select>
    <select id="selectUserbygeneralParkId" parameterType="int" resultMap="getAlluser">
        select
        u.user_id,u.user_name,u.user_pwd,u.join_time,u.away_time,u.sex,u.age,u.phone,u.card_number,u.email,u.salt,
        u.address,u.sanitation_score,u.attendance_score,u.work_ratio,u.work_sanitation,u.state,u.work_id,u.group_id,u.sub_park_id
        from t_user u,t_subpark s,t_group g
        where
        u.sub_park_id=#{subParkId}
        and
        g.sub_park_id=s.sub_park_id
        and
        g.group_id=u.group_id
     </select>

    <select id="selectAllUserBySubParkId" parameterType="int" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            <if test="_parameter!=null">and sub_park_id=#{_parameter}</if>
        </where>

    </select>

    <select id="selectAllUserBystate" parameterType="int" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            <if test="state!=null">and state=#{state}</if>
        </where>
    </select>

    <select id="selectUserBygrouIdAndPage" parameterType="int" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            <if test="groupId!=null">and group_id=#{groupId} limit #{page},#{limit}</if>
        </where>
    </select>

    <select id="selectAllUserBystateAndgroupId" resultMap="getAlluser">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            <if test="state!=null">and state=#{state}</if>
            <if test="groupId!=null">and group_id=#{groupId,jdbcType=INTEGER}</if>
        </where>
    </select>

    <select id="selectUserByCondition" resultMap="getAlluser" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <trim prefix="where" prefixOverrides="and|or">
            <if test="map.condition !=null and map.condition !='' ">
                and user_name like concat(#{map.condition,jdbcType=VARCHAR},'%')
            </if>
             <if test="map.condition !=null and map.condition !='' ">
                and phone like concat(#{map.condition,jdbcType=VARCHAR},'%')
            </if>
            <if test="map.condition !=null and map.condition !='' ">
                and card_number like concat(#{map.condition,jdbcType=VARCHAR},'%')
            </if>
            <if test="map.groupId!=null and map.groupId!=''">
                and group_id=#{map.groupId}
            </if>
        </trim>
        limit #{map.page},#{map.limit}
    </select>
    <insert id="insertOneUser" parameterType="user" useGeneratedKeys="true" keyProperty="userId">
        insert into t_user(user_name,user_pwd,join_time,away_time,sex,age,phone,card_number,email,address,sanitation_score,attendance_score,
        work_ratio,work_sanitation,salt,state,work_id,group_id,sub_park_id) values
        (#{userName,jdbcType=VARCHAR},#{userPwd,jdbcType=VARCHAR},#{joinTime,jdbcType=VARCHAR},#{awayTime,jdbcType=VARCHAR},#{sex,jdbcType=VARCHAR},#{age,jdbcType=INTEGER},#{phone,jdbcType=VARCHAR},#{cardNumber,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{sanitationScore,jdbcType=INTEGER},
       #{attendanceScore,jdbcType=INTEGER},#{workRatio,jdbcType=VARCHAR},#{workSanitation,jdbcType=VARCHAR},#{salt,jdbcType=VARCHAR},#{state,jdbcType=INTEGER},#{workId,jdbcType=INTEGER},#{groupId,jdbcType=INTEGER},#{subParkId,jdbcType=INTEGER})
    </insert>
    <update id="updateOneUser" parameterType="user">
        update t_user
        <trim prefix="set" suffixOverrides=",">
            <if test="userName!=null">user_name=#{userName},</if>
            <if test="userPwd!=null">user_pwd=#{userPwd},</if>
            <if test="joinTime!=null">join_time=#{joinTime},</if>
            <if test="awayTime!=null">away_time=#{awayTime},</if>
            <if test="sex!=null">sex=#{sex},</if>
            <if test="age!=null">age=#{age},</if>
            <if test="phone!=null">phone=#{phone},</if>
            <if test="cardNumber!=null">card_number=#{cardNumber},</if>
            <if test="email!=null">email=#{email},</if>
            <if test="salt!=null">salt=#{salt},</if>
            <if test="address!=null">address=#{address},</if>
            <if test="sanitationScore!=null">sanitation_score=#{sanitationScore},</if>
            <if test="attendanceScore!=null">attendance_score=#{attendanceScore},</if>
            <if test="workRatio!=null">work_ratio=#{workRatio},</if>
            <if test="workSanitation!=null">work_sanitation=#{workSanitation},</if>
            <if test="state!=null">state=#{state},</if>
            <if test="workId!=null">work_id=#{workId},</if>
            <if test="groupId!=null">group_id=#{groupId},</if>
            <if test="subParkId!=null">sub_park_id=#{subParkId},</if>
        </trim>
        where user_id=#{userId}
    </update>
    <delete id="deleteOneUserById" parameterType="int">
        delete from t_user where user_id=#{userId}
    </delete>
</mapper>